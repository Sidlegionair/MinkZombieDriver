language: php

sudo: false

cache:
  directories:
    - $HOME/.composer/cache/files

php: [5.4, 5.6, 7.0, 7.1]

env:
  global:
    # Node version needed for zombie 3.0.
    - NODE_VERSION='6.17.0'
    # npm will install Zombie 4.x by default, even though it is not compatible with the version of node available on Travis.
    - ZOMBIE_VERSION='@^3.0'
    # Force binding to IPv4 as Zombie and PHP seem to have a different resolution for localhost on Travis.
    - MINK_HOST=127.0.0.1:8002

matrix:
  include:
    - php: 5.3
      dist: precise
      env:
        - NODE_VERSION='0.10.48'
        - PHPUNIT_VERSION='^4.8'
        - SYMFONY_PHPUNIT_BRIDGE_VERSION='4.0.*'
        # Force using PHP 5.6 for the webserver to be able to run it on PHP 5.3 jobs too
        - MINK_PHP_BIN=~/.phpenv/versions/5.6.13/bin/php
    - php: 5.5
      env: PHPUNIT_VERSION='^4.8'
    - php: 5.6
      env: ZOMBIE_VERSION='@^2.0'
    - php: 5.6
      env:
        - NODE_VERSION='5.4.1'
        - ZOMBIE_VERSION='@^4.0'
    - php: 7.2
      env: PHPUNIT_VERSION='^6.0'
    - php: 7.1
      env:
        - NODE_VERSION=''
        - ZOMBIE_VERSION=''
        - PHPUNIT_VERSION='^6.0'
    - php: 7.3
      env: PHPUNIT_VERSION='^6.0'

before_install:
  - wget https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.gz && tar xfz node-v${NODE_VERSION}-linux-x64.tar.gz && export PATH="`pwd`/node-v${NODE_VERSION}-linux-x64/bin:$PATH"

  - if [[ "${PHPUNIT_VERSION}" != "" ]]; then composer require --dev phpunit/phpunit:${PHPUNIT_VERSION}; fi
  - if [[ "${SYMFONY_PHPUNIT_BRIDGE_VERSION}" != "" ]]; then composer require --dev symfony/phpunit-bridge:${SYMFONY_PHPUNIT_BRIDGE_VERSION}; fi

  - node --version
  - npm --version

install:
  - composer install
  - npm install zombie$ZOMBIE_VERSION

before_script:
  # Start a webserver for web fixtures.
  - vendor/bin/mink-test-server > /dev/null 2>&1 &

  # Set the PHPUnit executable to the local or global one
  - if [[ "${PHPUNIT_VERSION}" != "" ]]; then PHPUNIT_CMD=vendor/bin/phpunit; else PHPUNIT_CMD=phpunit; fi

script:
  - ${PHPUNIT_CMD} -v --coverage-clover=coverage.clover

after_script:
  # XDebug is not yet available on PHP 7.1 so we don't have code coverage there. Not uploading it avoids telling Scrutinizer that it is missing
  - if [[ "$TRAVIS_PHP_VERSION" != "7.1" ]]; then wget https://scrutinizer-ci.com/ocular.phar && php ocular.phar code-coverage:upload --format=php-clover coverage.clover; fi